{"version":3,"sources":["components/FormComponent.js","components/ErrorComponent.js","components/HomeComponent.jsx","App.js","components/Family/CreateFamilyComponent.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["FormComponent","props","toast","configure","formatError","error","console","log","response","data","Array","isArray","errors","msg","param","toLowerCase","message","toString","showAlert","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setSymptomsSelected","newValue","target","value","symptomsSelectedCopy","state","symptomsSelected","newSymptomsSelected","find","element","filter","symptom","setState","push","students","studentSelected","users","id","name","questions","answer","numberTemperature","symptomsComments","exposedComments","contactComments","returnTravelDate","dateCovid","Date","symptoms","radioButtonSelected","bind","save","setStartDate","inputAnswer","a","axios","get","process","this","e","questionNumber","newQuestions","map","question","index","byUser","fromStudent","temperature","exposed","contactCovid","travel","toLocaleDateString","post","catch","isMobile","arrayErrors","showErrors","result","status","date","numberQuestion","fontSize","className","style","textAlign","htmlFor","onChange","student","_id","nameStudent","lastNameStudent","motherLastNameStudent","type","checked","visibility","placeholder","display","dateFormat","selected","withPortal","locale","localeSpanish","onClick","React","Component","ErrorComponent","componentDidUpdate","hasOwnProperty","inputRequerid","errorMessage","hideErrors","title","HomeComponent","render","href","textDecoration","App","length","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5720cf75.chunk.js","sourcesContent":["\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport localeSpanish from \"date-fns/locale/es\";\n\nimport { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    isMobile\n  } from \"react-device-detect\";\n\nclass FormComponent extends React.Component {\n\n    \n    async componentDidMount() {\n        \n        \n        \n        const response = await axios.get(process.env.REACT_APP_DOMAIN_URL + '/api/student');\n        \n        this.setState({\n            students: response.data.students\n        })\n    }\n    \n    constructor(props) {\n        \n        toast.configure();\n        super(props);\n        this.state = {\n            students: [],\n            studentSelected: null,\n            users: [\n                {\n                    id: 1,\n                    name: 'Ruben Alavarado'\n                },\n                {\n                    id: 2,\n                    name: 'Antonio Lopez'\n                },\n                {\n                    id: 3,\n                    name: 'Ricardo Morales'\n                },\n                {\n                    id: 4,\n                    name: 'Roberto Carlos'\n                },\n                {\n                    id: 5,\n                    name: 'Jorge Allende'\n                }\n            ],\n            questions: [\n                {\n                    id: 1,\n                    answer: true,\n                    numberTemperature: ''\n                },\n                {\n                    id: 2,\n                    answer: false,\n                    symptomsComments: ''\n                },\n                {\n                    id: 3,\n                    answer: false,\n                    exposedComments: ''\n                },\n                {\n                    id: 4,\n                    answer: false,\n                    contactComments: ''\n                },\n                {\n                    id: 5,\n                    answer: false,\n                    returnTravelDate: ''\n                },\n            ],\n            dateCovid: new Date(),\n            errors: [],\n            symptoms: [\n                {\n                    name: 'Tos',\n                    value: 'tos'\n                },\n                {\n                    name: 'Dolor de cabeza',\n                    value: 'dolor de cabeza'\n                },\n                {\n                    name: 'Ojos rojos',\n                    value: 'ojos rojos'\n                },\n                {\n                    name: 'Otros',\n                    value: 'otros'\n                }\n            ],\n            symptomsSelected: []\n        }\n        \n        this.radioButtonSelected = this.radioButtonSelected.bind(this) \n        this.save = this.save.bind(this) \n        this.setStartDate = this.setStartDate.bind(this) \n        this.studentSelected = this.studentSelected.bind(this)\n        this.inputAnswer = this.inputAnswer.bind(this)\n\n    }\n    \n    radioButtonSelected(e, questionNumber) {\n\n        let newQuestions = this.state.questions.map((question, index) => {\n\n            if (index === questionNumber) {\n                question.answer = !this.state.questions[questionNumber].answer\n                return question\n            }\n            return question\n        });\n\n        this.setState({\n            questions: newQuestions\n        });\n        \n    }\n\n    formatError = (error) => {\n        console.log('error movil', error.response.data)\n        // Si es un array se tiene que dar formato\n        if (Array.isArray(error.response.data.errors)) {\n            return error.response.data.errors[0].msg +' '+ error.response.data.errors[0].param.toLowerCase()\n        } else {\n            // Si es un objeto se pinta inmediatamente\n            return error.response.data.message.toString();\n        }\n        \n    }\n\n    async save() {\n        const data = {\n            byUser: '60f73c18d5cbc40015055ef8', // test\n            fromStudent: this.state.studentSelected,\n            temperature: this.state.questions[0].answer,\n            numberTemperature: this.state.questions[0].numberTemperature,\n            symptoms: this.state.questions[1].answer,\n            symptomsComments: this.state.questions[1].symptomsComments,\n            exposed: this.state.questions[2].answer,\n            exposedComments: this.state.questions[2].exposedComments,\n            contactCovid: this.state.questions[3].answer,\n            contactComments: this.state.questions[3].contactComments,\n            travel: this.state.questions[4].answer,\n            returnTravelDate: this.state.dateCovid === null ? null : this.state.dateCovid.toLocaleDateString()\n        }\n        this.setState({errors: []});\n\n        let result = await axios.post(process.env.REACT_APP_DOMAIN_URL + '/api/todayCOVID', data).catch((error) => {\n\n            if (isMobile) {\n                console.log('es movil')\n                toast.error('❌  ' + this.formatError(error), {\n                    position: \"top-right\",\n                    autoClose: false,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true\n                });\n                return;\n            }\n            let arrayErrors = [];\n            if (!Array.isArray(error.response.data.errors)) {\n                arrayErrors.push(error.response.data)\n            } else {\n                arrayErrors = error.response.data.errors\n            }\n            this.setState({\n                errors: arrayErrors\n            });\n            console.log('array errors para props:' , arrayErrors)\n            this.props.showErrors(arrayErrors);\n        });\n\n        \n        if (typeof result === 'undefined') {\n            return;\n        }\n\n        if (result.status === 200) {\n            this.showAlert();\n        }\n\n    }\n\n    setStartDate(date) {\n        this.setState({\n            dateCovid: date\n        })\n    }\n\n    studentSelected(e) {\n        this.setState({\n            studentSelected: e.target.value\n        });\n    }\n\n    inputAnswer(e, numberQuestion, inputAnswer) {\n        let newQuestions = this.state.questions.map((question, index) => {\n\n            if (index === numberQuestion) {\n                question[inputAnswer] = e.target.value; \n                return question\n            }\n            return question\n        })\n        \n        this.setState({\n            questions: newQuestions\n        });\n        \n    }\n\n    showAlert = () => {\n        toast.success('🦠 Formulario llenado con éxito!', {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        });\n    }\n\n    setSymptomsSelected = (newValue) => {\n        console.log('sintomas', newValue.target.value)\n        let symptomsSelectedCopy = this.state.symptomsSelected;\n        let symptom = symptomsSelectedCopy.find(element => element === newValue.target.value);\n        \n        let newSymptomsSelected = [];\n        \n        if (symptom) {\n            newSymptomsSelected = symptomsSelectedCopy.filter(symptom => symptom !== newValue.target.value)\n            this.setState({\n                symptomsSelected: newSymptomsSelected\n            });\n            return;\n        }\n\n        symptomsSelectedCopy.push(newValue.target.value)\n\n        this.setState({\n            symptomsSelected: symptomsSelectedCopy\n        });\n\n\n        /* let symptoms = this.state.symptomsSelected.push()\n        this.setState({\n            symptomsSelected: \n        }); */\n    }\n    \n    \n    \n    render() {\n        let fontSize = '1rem';\n\n        if (isMobile) fontSize = '1rem';\n       \n        return (\n            <div>\n                \n                <div className=\"form-group\" style={{textAlign: \"left\"}}>\n                    <label htmlFor=\"exampleSelect1\" className=\"form-label mt-4\">Selecciona un Alumno</label>\n                    <select onChange={this.studentSelected} className=\"form-select\" id=\"exampleSelect1\">\n                        <option value={null}>\n                            Selecciona un estudiante\n                        </option>\n                        {\n                            this.state.students.map((student) => {\n                                return <option \n                                    key={student._id}\n                                    value={student._id}\n                                    >\n                                        {student.nameStudent + ' ' + student.lastNameStudent + ' ' + student.motherLastNameStudent}</option>\n                            })\n                        }\n                    </select>\n                </div>\n\n                <fieldset className=\"form-group\" style={{textAlign: \"left\"}}>\n                    \n                    <legend style={{fontSize}} className=\"mt-4\">1.- ¿ Temperatura menor a 37° ? </legend>\n\n                    <div className=\"row\">\n                        <div className=\"col-7 align-self-center\">\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    checked={this.state.questions[0].answer === true} onChange={e => this.radioButtonSelected (e, 0) } \n                                    className=\"form-check-input\" \n                                    name=\"optionsRadios\" \n                                    id=\"optionsRadios1\" \n                                    value={true} \n                                />\n                                SI\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    checked={this.state.questions[0].answer === false} onChange={e => this.radioButtonSelected (e, 0)} className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value={false} />\n                                NO\n                                </label>\n                            </div>\n                        </div>\n\n                        \n                        <div \n                            className=\"col-md-12 col-lg-3\" \n                            style={ this.state.questions[0].answer === true || this.state.questions[0].answer === null ? {visibility: 'hidden'} : {}}\n                        >\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\" \n                                    placeholder=\"Indique su temperatura\" \n                                    id=\"numberTemperature\"\n                                    onChange={e => this.inputAnswer(e, 0, 'numberTemperature')} \n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </fieldset>\n\n                <fieldset className=\"form-group\" style={{textAlign: \"left\"}}>\n                    <legend style={{fontSize}} className=\"mt-4\">2.- ¿ Identificas algún síntoma ? </legend>\n\n                    <div className=\"row justify-content-start \">\n                        <div className=\"col-5 align-self-center\">\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\" \n                                    checked={this.state.questions[1].answer === true} \n                                    onChange={e => this.radioButtonSelected (e, 1) } \n                                    name=\"optionsRadios2\" \n                                    id=\"optionsRadios1\" \n                                    value={true} \n                                />\n                                SI\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\" \n                                    checked={this.state.questions[1].answer === false} \n                                    onChange={e => this.radioButtonSelected (e, 1) }\n                                    name=\"optionsRadios2\" \n                                    id=\"optionsRadios2\" \n                                    value={false} />\n                                NO\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-12 col-lg-7\" style={ this.state.questions[1].answer === false ? {visibility: 'hidden'} : {}}>\n                            <div className=\"row\">\n                            <fieldset className=\"form-group\">\n                            <div className=\"form-check\">\n                            <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Indica los síntomas\" \n                                    id=\"exposedComments\" \n                                    onChange={e => this.inputAnswer(e, 1, 'symptomsComments')} \n                                />\n                                \n                            {/* {\n                                        this.state.symptoms.map((symptom) => {\n                                            return <div key={symptom.value} className=\"col\">\n                                                <input onChange={this.setSymptomsSelected} className=\"form-check-input\" type=\"checkbox\" value={symptom.value} id={symptom.value} />\n                                                <label className=\"form-check-label\" htmlFor={symptom.value}>\n                                                    { symptom.name }\n                                                </label>\n                                            </div>\n                                        })\n                                } */}\n                                \n                            </div>\n                        </fieldset>\n                            </div>\n                        \n                            \n                        </div>\n\n                    </div>\n                    \n                </fieldset>\n                <fieldset className=\"form-group\" style={{textAlign: \"left\"}}>\n                    <legend style={{fontSize}} className=\"mt-4\">3.- ¿ Has asistido a algun lugar sin medidas de control sanitario ? </legend>\n\n                    <div className=\"row justify-content-start \">\n                        <div className=\"col-7 align-self-center\">\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                type=\"radio\" \n                                className=\"form-check-input\" \n                                checked={this.state.questions[2].answer === true} \n                                onChange={e => this.radioButtonSelected (e, 2) }\n                                name=\"optionsRadios3\" \n                                id=\"optionsRadios1\" \n                                value={true} />\n                                SI\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\" \n                                    checked={this.state.questions[2].answer === false} \n                                    onChange={e => this.radioButtonSelected (e, 2) }\n                                    name=\"optionsRadios3\" \n                                    id=\"optionsRadios2\" \n                                    value={false} />\n                                NO\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-12 col-lg-3\" style={ this.state.questions[2].answer === false ? {visibility: 'hidden'} : {}}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Indica los lugares\" \n                                    id=\"exposedComments\" \n                                    onChange={e => this.inputAnswer(e, 2, 'exposedComments')} \n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </fieldset>\n                <fieldset className=\"form-group\" style={{textAlign: \"left\"}}>\n                    <legend style={{fontSize}} className=\"mt-4\">4.- ¿ Alguien en casa tiene Covid o tuviste contacto con alguien con este virus ?  </legend>\n\n                    <div className=\"row justify-content-start \">\n                        <div className=\"col-7 align-self-center\">\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                type=\"radio\" \n                                className=\"form-check-input\" \n                                checked={this.state.questions[3].answer === true} \n                                onChange={e => this.radioButtonSelected (e, 3) }\n                                name=\"optionsRadios4\" \n                                id=\"optionsRadios1\" \n                                value={true} \n                            />\n                                SI\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\"\n                                    checked={this.state.questions[3].answer === false} \n                                    onChange={e => this.radioButtonSelected (e, 3) } \n                                    name=\"optionsRadios4\" \n                                    id=\"optionsRadios2\" \n                                    value={false} \n                                />\n                                NO\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-12 col-lg-3\" style={ this.state.questions[3].answer === false ? {visibility: 'hidden'} : {}}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Comentario\" \n                                    id=\"contactComments\" \n                                    onChange={e => this.inputAnswer(e, 3, 'contactComments')} \n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </fieldset>\n                <fieldset className=\"form-group\" style={{textAlign: \"left\"}}>\n                    <legend style={{fontSize}} className=\"mt-4\">5.- ¿ Hiciste un viaje cuyo regreso fue dentro de los 14 dias anteriores ?  </legend>\n\n                    <div className=\"row justify-content-start \">\n                        <div className=\"col-7 align-self-center\">\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\"\n                                    checked={this.state.questions[4].answer === true} \n                                    onChange={e => this.radioButtonSelected (e, 4) } \n                                    name=\"optionsRadios5\" \n                                    id=\"optionsRadios1\" \n                                    value={true} \n                                />\n                                SI\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input \n                                    type=\"radio\" \n                                    className=\"form-check-input\"\n                                    checked={this.state.questions[4].answer === false} \n                                    onChange={e => this.radioButtonSelected (e, 4) }  \n                                    name=\"optionsRadios5\" \n                                    id=\"optionsRadios2\" \n                                    value={false} \n                                />\n                                NO\n                                </label>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-3 col-sm-12\" style={ this.state.questions[4].answer === false ? {visibility: 'hidden'} : {}}>\n                            <div className=\"form-group\" style={{display: 'display: flex; justify-content: center;'}}>\n                                <DatePicker \n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={this.state.dateCovid} \n                                    onChange={(date) => this.setStartDate(date)} \n                                    withPortal\n                                    locale={localeSpanish}\n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </fieldset>\n\n                <div className=\"mb-4\" style={{display: 'display: flex; justify-content: center;'}}>\n                    <button \n                        onClick={this.save}\n                        type=\"button\" \n                        className=\"btn btn-outline-primary mt-4\"\n                    >\n                        Guardar\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default FormComponent;","import React from 'react';\n\nclass ErrorComponent extends React.Component {\n\n    componentDidMount() {\n        if (this.props.errors.map((error) => {\n            console.log('errorsitos')\n            if (error.hasOwnProperty('msg')) {\n                console.log('tiene msg')\n                error.message = 'El campo ' + this.inputRequerid(error.param) + ' ' + error.msg.toLowerCase()\n                return error;\n            } else {\n                console.log('no tiene msg')\n                return error;\n            }\n        }));\n\n        this.setState({\n            errorMessage: this.props.errors[0].message\n        });\n    }\n\n    componentDidUpdate = () => {\n        if (this.props.errors.map((error) => {\n            console.log('errorsitos')\n            if (error.hasOwnProperty('msg')) {\n                console.log('tiene msg')\n                error.message = 'El campo ' + this.inputRequerid(error.param) + ' ' + error.msg.toLowerCase()\n                return error;\n            } else {\n                console.log('no tiene msg')\n                return error;\n            }\n        }));\n    }\n\n    inputRequerid = (inputRequerid) => {\n        switch (inputRequerid) {\n            case 'fromStudent':\n                return 'estudiante';\n            default: \n                return 'estudiante';\n        }\n    }\n\n    state = {\n        errorMessage: ''\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <div \n                    className=\"alert alert-dismissible alert-danger\">\n                    <button \n                        onClick={this.props.hideErrors}\n                        type=\"button\" \n                        className=\"btn-close\" \n                        data-bs-dismiss=\"alert\" />\n                    <h4 className=\"alert-heading\">\n                        {this.props.title}\n                    </h4>\n                    <p \n                        className=\"mb-0\"\n                    >\n                        {this.props.errors[0].message}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ErrorComponent;","import React from 'react';\n\nclass HomeComponent extends React.Component {\n\n    render = () => {\n        return (\n            <div className=\"mt-3\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                        <div className=\"card mb-3\">\n                            <h3 className=\"card-header\">Encuesta Covid-19</h3>\n                            <div className=\"card-body\">\n                                <a href=\"/quiz-covid\" style={{textDecoration: 'none'}}>\n                                    <h1 className=\"card-title\">🦠</h1>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                        <div className=\"card mb-3\">\n                                <h3 className=\"card-header\">Reporte Encuesta Covid-19</h3>\n                                <div className=\"card-body\">\n                                    <a href=\"/quiz-covid\" style={{textDecoration: 'none'}}>\n                                        <h1 className=\"card-title\">🧑‍🔬 🤔</h1>\n                                    </a>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                        <div className=\"card mb-3\">\n                            <h3 className=\"card-header\">Registro Familia</h3>\n                            <div className=\"card-body\">\n                                <a href=\"/families\" style={{textDecoration: 'none'}}>\n                                    <h1 className=\"card-title\">🧑‍🤝‍🧑 📝</h1>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                        <div className=\"card mb-3\">\n                                <h3 className=\"card-header\">Registro Estudiante</h3>\n                                <div className=\"card-body\">\n                                    <a href=\"/quiz-covid\" style={{textDecoration: 'none'}}>\n                                        <h1 className=\"card-title\">😷 📝</h1>\n                                    </a>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HomeComponent;","import 'bootstrap/dist/js/bootstrap.min.js';\nimport './App.css';\n\nimport React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport FormComponent from \"./components/FormComponent\";\nimport ErrorComponent from \"./components/ErrorComponent\";\nimport HomeComponent from \"./components/HomeComponent\";\nimport CreateFamilyComponent from './components/Family/CreateFamilyComponent';\n\nclass App extends React.Component {\n  state = {\n    errors: []\n  }\n  showErrors = (errors) => {\n    \n    this.setState({\n      errors: errors\n    });\n  }\n\n  hideErrors = () => {\n    this.setState({\n      errors: []\n    });\n  }\n  render() {\n    console.log('errores',this.state.errors.length > 0)\n    return (\n      <div className=\"App\">\n\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/#\">ED-360</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n      <ul className=\"navbar-nav me-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" href=\"/#\">Inicio\n            <span className=\"visually-hidden\">(current)</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<Router>\n      { this.state.errors.length > 0 &&  <ErrorComponent \n              hideErrors={this.hideErrors}\n              errors={this.state.errors}\n              title={'Error'}\n      />}\n      \n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/quiz-covid\" exact>\n            <FormComponent showErrors={this.showErrors}/> \n          </Route>\n          <Route path=\"/\" exact>\n            <HomeComponent />\n          </Route>\n          <Route path=\"/families\" exact>\n{/*             <CreateFamilyComponent/>\n */}          </Route>\n        </Switch>\n      </div>\n\n\n</Router>\n\n      \n\n\n\n    </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nclass CreateFamilyComponent extends React.Component {\n    render = () => {\n        return (\n            <div>\n            <form>\n  <fieldset>\n    <legend>Legend</legend>\n    <div class=\"form-group row\">\n      <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" readonly=\"\" class=\"form-control-plaintext\" id=\"staticEmail\" value=\"email@example.com\"/>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\" class=\"form-label mt-4\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\" class=\"form-label mt-4\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleSelect1\" class=\"form-label mt-4\">Example select</label>\n      <select class=\"form-select\" id=\"exampleSelect1\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleSelect2\" class=\"form-label mt-4\">Example multiple select</label>\n      <select multiple=\"\" class=\"form-select\" id=\"exampleSelect2\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleTextarea\" class=\"form-label mt-4\">Example textarea</label>\n      <textarea class=\"form-control\" id=\"exampleTextarea\" rows=\"3\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"formFile\" class=\"form-label mt-4\">Default file input example</label>\n      <input class=\"form-control\" type=\"file\" id=\"formFile\"/>\n    </div>\n    <fieldset class=\"form-group\">\n      <legend class=\"mt-4\">Radio buttons</legend>\n      <div class=\"form-check\">\n        <label class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" checked=\"\"/>\n          Option one is this and that—be sure to include why it's great\n        </label>\n      </div>\n      <div class=\"form-check\">\n        <label class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"/>\n          Option two can be something else and selecting it will deselect option one\n        </label>\n      </div>\n      <div class=\"form-check disabled\">\n        <label class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios3\" value=\"option3\" disabled=\"\"/>\n          Option three is disabled\n        </label>\n      </div>\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <legend class=\"mt-4\">Checkboxes</legend>\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"/>\n        <label class=\"form-check-label\" for=\"flexCheckDefault\">\n          Default checkbox\n        </label>\n      </div>\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked=\"\"/>\n        <label class=\"form-check-label\" for=\"flexCheckChecked\">\n          Checked checkbox\n        </label>\n      </div>\n    </fieldset>\n    <fieldset>\n      <legend class=\"mt-4\">Switches</legend>\n      <div class=\"form-check form-switch\">\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n        <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\n      </div>\n      <div class=\"form-check form-switch\">\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" checked=\"\"/>\n        <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Checked switch checkbox input</label>\n      </div>\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <legend class=\"mt-4\">Ranges</legend>\n        <label for=\"customRange1\" class=\"form-label\">Example range</label>\n        <input type=\"range\" class=\"form-range\" id=\"customRange1\"/>\n        <label for=\"disabledRange\" class=\"form-label\">Disabled range</label>\n        <input type=\"range\" class=\"form-range\" id=\"disabledRange\" disabled=\"\"/>\n        <label for=\"customRange3\" class=\"form-label\">Example range</label>\n        <input type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" step=\"0.5\" id=\"customRange3\"/>\n    </fieldset>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </fieldset>\n</form>\n</div>\n        )\n    }\n}\n\nexport default CreateFamilyComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootswatch/dist/minty/bootstrap.min.css';\n\nimport 'bootstrap';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}